= Introduction =

This page describes build configuration for when the default actions or paths are not sufficient or appropriate for your project.

= Example =

This example will show you how to specify the main class executed by the `run` action.

First, create a new project:
{{{
$ sbt
> No project found. Create new project? (y/N) y
Project Name: Test Project
Version: 1.0
Create new project Test Project 1.0 ? (Y/n) y
}}}

Make a source file called

{{{
src/main/scala/Test.scala
}}}

with the following content:

{{{
object Test
{
  def main(args: Array[String])
  {
    println("Hello World!")
  }
}
}}}


Customize the build by creating a new file called
{{{
metadata/build/src/TestProject.scala
}}}

with the following content:

{{{
import sbt._

class TestProject(info: ProjectInfo) extends DefaultProject(info)
{
  override def mainClass = Some("Test")
}
}}}

Now, try it out:
{{{
$sbt
> run
...
Hello World!
...
}}}

On startup, `sbt` will compile `TestProject` and instantiate it.  When you execute the `run` action, `sbt` runs `Test` using the scala runner in the same virtual machine as `sbt`.  See RunningProjectCode for details.

Note: `sbt` only recompiles a project definition on startup.  If you are running in interactive mode, changes made to `TestProject` will not take effect until the next time you start sbt.