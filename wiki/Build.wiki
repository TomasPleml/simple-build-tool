= Building `sbt` =

== Background ==

`sbt` now uses git for version control.  You can find the source on github.  With 0.7, `sbt` is split across two projects: `xsbt` and `sbt`.  `xsbt` started out as an experimental set of components to decouple the version of Scala used to run `sbt` from the version used to build the project.    Importantly, it has become a project that provides components for building a Scala build tool.  That is, going forward, self-contained components like the Ivy interface, compilation, tasks, and the launcher are subprojects in `xsbt`.  The `sbt` project then builds on those components to provide a final product.

Test support was separated out to work across a [http://github.com/harrah/test-interface uniform test interface].  Because of this, `sbt` no longer needs to be compiled against test frameworks.  New test frameworks that implement the uniform test interface can be used by `sbt` without needing to recompile `sbt`, as was the case previously.  In order to provide compatibility with `sbt` 0.5.6, there is [http://github.com/harrah/test-interface an implementation] of the test interface for Scala test frameworks released before the interface existed.

== Instructions ==

With this in mind, we need to build:
 # The launcher in `xsbt`
 # The other components in `xsbt`
 # The finished build tool `sbt`

The latest `sbt` release (0.7.1) is used to build.  From scratch, building `sbt` locally looks like:
{{{
$ git clone git://github.com/harrah/xsbt.git
$ cd xsbt
$ sbt update proguard "project Compile" publish-local "project Test" publish-local

$ cd ..
$ git clone git://github.com/harrah/sbt.git
$ cd sbt
$ sbt update publish-local
}}}
The launcher jar created by the `proguard` action is located at `xsbt/target/sbt-launch-0.7.x.jar`.