= Introduction =

This page describes how to set up your project for use with sbt. 

The basic steps are:
 # Create a script to launch sbt.
 # Create your project with sbt.
 # Put libraries in `lib` and sources in `src`.
 # Read RunningSbt for basic usage instructions.
 # Read BuildConfiguration for further configuration.

= Launching Sbt =

The easiest way to launch sbt is to create a one-line script.  Download [http://simple-build-tool.googlecode.com/files/sbt-launcher-0.4.3.jar sbt-launcher.jar] if you have not already.

=== Unix ===
Put the line
{{{
java -Xmx256M -jar sbt-launcher.jar "$@"
}}}
in a file called `sbt` in your `~/bin` directory and do
{{{
$ chmod u+x ~/bin/sbt
}}}
This allows you to launch sbt in any directory by typing `sbt` at the command prompt.

=== Windows ===
Create a batch file `sbt.bat`:
{{{
java -Xmx256M -jar sbt-launcher.jar %*
}}}
Put `sbt.bat` on your path so that you can launch sbt in any directory by typing `sbt` at the command prompt.

= Create Project =

When you run sbt and it does not find a project in the current directory, it asks if you want to create a new project.  If you say yes, sbt will prompt for some basic information:
 * Project name: This name will be used in scaladocs and as part of the default name for generated packages.
 * Project organization: This is used for dependency management and is optional.
 * Project version: This is used in scaladocs and as part of the default name for generated packages.
 * Scala version: This is version of scala to build the project with.  Current options are 2.7.2 and 2.7.3.
 * Sbt version: This is the version of sbt to build the project with.  Current options are 0.4 and 0.4.3.

With this information, sbt creates the project properties file and directory structure.  See [Loader] for more information on setting the versions of Scala and `sbt` to use to build your project.  These are described in the following section.

= Directory Layout =

Sbt uses the same directory structure as [http://maven.apache.org/ Maven] for source files by default (all paths are relative to the project directory):

{{{
  src/
    main/
      resources/
         <files to include in main jar here>
      scala/
         <main Scala sources>
    test/
      resources
         <files to include in test jar here>
      scala/
         <test Scala sources>
}}}

Other directories in `src/` will be ignored.  Additionally, all hidden directories will be ignored.

All dependencies (jars) go in the
{{{
  lib/
}}}
directory or any subdirectory of `lib`.  Again, hidden directories will be ignored.  If you want to use [http://code.google.com/p/scalacheck/ ScalaCheck], [http://code.google.com/p/specs/ specs], or [http://www.artima.com/scalatest/ ScalaTest] for testing, those jars should go in here as well.  Alternatively, you can configure `sbt` to automatically manage your dependencies (see LibraryManagement).

Build configuration is done in the `project` directory:
{{{
  project/
    build.properties
    build/
    boot/
}}}

The `build.properties` file contains the project name, version, and organization, the versions of Scala and `sbt` used to build the project, and any other user-defined properties (see [Properties]).  You can directly edit this file to change these properties or you can use the `set` command at the interactive prompt (see [RunningSbt Basic Usage]). The `build` directory is where further configuration is done and is described in BuildConfiguration.  The `boot` directory is where the versions of Scala and `sbt` used to build the project are downloaded to.

Generated files (classes, jars, analysis, and documentation) will be written to the
{{{
  target/
}}}
directory.

= Next Step =

Read [RunningSbt Basic Usage] for basic `sbt` usage information.

= Summary =

 # Create a launcher script.
 # Setup your project information and directory structure by running `sbt` in your project directory.
 # Put libraries in `lib` or configure automatic dependency management.
 # Read RunningSbt for basic usage instructions.
 # Start with BuildConfiguration for further project configuration.