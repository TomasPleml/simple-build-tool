= Introduction =

This page describes how to set up your project for use with sbt.
All paths are relative to your project directory.

The basic steps are:
 # Create a script to launch sbt
 # Create your project with sbt
 # Put libraries in `lib` and sources in `src`
 # Read RunningSbt for basic usage instructions

= Launching Sbt =

The easiest way to launch sbt is to create a one-line script.  Download [http://simple-build-tool.googlecode.com/files/sbt-0.2.1.jar sbt.jar] if you have not already.  I will refer to the full path to `sbt.jar` as `sbt_home/sbt.jar` in the scripts.

=== Unix ===
Put the line
{{{
scala -cp sbt_home/sbt.jar sbt.Main $*
}}}
in a file called `sbt` in your `~/bin` directory and do
{{{
$ chmod u+x ~/bin/sbt
}}}
This allows you to launch sbt in any directory by typing `sbt` at the command prompt.

See RunningSbt for usage.

=== Windows ===
Create a batch file `sbt.bat`:
{{{
scala -cp sbt_home\sbt.jar sbt.Main %*
}}}
Put `sbt.bat` on your path so that you can launch sbt in any directory by typing `sbt` at the command prompt.

See RunningSbt for usage.

= Create Project =

When you run sbt and it does not find a project in the current directory, it asks if you want to create a new project.  If you say yes, sbt will prompt for a project name and version and create the project properties file and directory structure.  These are described in the following sections.

= Directory Layout =

Sbt uses the same directory structure as maven for source files by default:

{{{
  src/
    main/
      resources/
         <files to include in main jar here>
      scala/
         <main Scala sources>
    test/
      resources
         <files to include in test jar here>
      scala/
         <test Scala sources>
}}}

Other directories in src/ will be ignored.  Additionally, all `.svn` directories will be ignored.

All dependencies (jars) go in the
{{{
  lib/
}}}
directory or any subdirectory of `lib`.  Again, `.svn` directories will be ignored.  If you want to use [http://code.google.com/p/scalacheck/ ScalaCheck] for testing, it should go in here as well.  You will need a version compiled with Scala 2.7.2.

The project information directory is:
{{{
  project/
    build.properties
    build/
}}}

The `build.properties` file contains the project name and version and any other user-defined properties (see [Properties]).  The `build` directory is where further configuration is done and is described in BuildConfiguration.

Generated files (classes, jars, analysis, and documentation) will be written to the
{{{
  target/
}}}
directory.  This directory does not need to be manually created.

= Summary =

 # Create a launcher script
 # Setup your project information and directory structure by running `sbt` in your project directory.
 # Put libraries in `lib`
 # Read RunningSbt for basic usage instructions
 # Start with BuildConfiguration for further project configuration.