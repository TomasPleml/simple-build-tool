= Hello Lift Example =

This page provides an example of building a [http://liftweb.net Lift] web application using the new web application features in `sbt` 0.3.4.

== Get the example ==

Download the [http://liftweb.net/index.php/HowTo_start_a_new_liftwebapp Hello Lift example] using maven and change to the new directory.

{{{
$ mvn archetype:create -U \
 -DarchetypeGroupId=net.liftweb \
 -DarchetypeArtifactId=lift-archetype-basic \
 -DarchetypeVersion=0.10 \
 -DremoteRepositories=http://scala-tools.org/repo-releases \
 -DgroupId=net.liftweb.hello -DartifactId=hello-lift

$ cd hello-lift
}}}

== Setup the `sbt` project ==

Run `sbt` and provide the project name and version:

{{{
$ sbt
No project found. Create new project? (y/N) y
Project Name: Hello Lift
Version: 1.0
Create new project Hello Lift 1.0 ? (Y/n)
[success] Successfully initialized directory structure.
[info] Building project Hello Lift 1.0 using sbt.DefaultProject
[info] No actions specified, interactive session started. Execute 'help' for more information.
>
}}}

== Create the custom project configuration ==

Use the following project definition (put it in `project/build/src/HelloLiftProject.scala`) to enable the web application features and declare dependencies.  Afterwards, run `reload` so that `sbt` reloads the project definition.

{{{
import sbt._

class HelloLiftProject(info: ProjectInfo) extends DefaultWebProject(info)
{
	val jetty = "org.mortbay.jetty" % "jetty" % "6.1.14" % "test->default"
	val servlet = "javax.servlet" % "servlet-api" % "2.5" % "provided->default"
	val derby = "org.apache.derby" % "derby" % "10.2.2.0" % "runtime->default"
	override def ivyXML =
		<configurations>
			<conf name="compile"/>
			<conf name="provided"/>
			<conf name="runtime" extends="compile"/>
			<conf name="test" extends="runtime" visibility="private"/>
		</configurations>
		<dependencies>
			<dependency org="net.liftweb" name="lift-core" rev="0.10" conf="compile->default">
				<exclude org="junit"/>
				<exclude org="org.igniterealtime.smack"/>
				<exclude org="org.apache.commons"/>
				<exclude org="org.scala-lang"/>
			</dependency>
		</dependencies>
}
}}}

Run `reload`:
{{{
> reload
}}}

== Get the dependencies ==

`sbt` does not resolve dependencies unless explicitly requested, so run `update`:
{{{
> update
}}}

== Try it out ==

Now, start the webapp:
{{{
> jetty-run
}}}

and browse to http://localhost:8080.

Stop the webapp when you are done:
{{{
> jetty-stop
}}}

To create a war file, run the `package` action.  `DefaultWebProject` redefines `package` to create a war instead of a jar.

{{{
> package
}}}